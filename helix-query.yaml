version: 1
indices:
  default:
    include:
      - '/**'
    exclude:
      - '/drafts/**'
      - 'images/**'
      - '/**/footer'
      - '/footer'
      - '/**/nav'
      - '/nav'
      - '/fragments/**'
      - '/**/sub-nav'
      - '/block-library/**'
    target: /query-index.json
    properties:
      lastModified:
        select: none
        value: parseTimestamp(headers["last-modified"], "ddd, DD MMM YYYY hh:mm:ss GMT")
      title:
        select: head > meta[property="og:title"]
        value: attribute(el, "content")
      image:
        select: head > meta[property="og:image"]
        value: match(attribute(el, "content"), "https:\/\/[^/]+(/.*)")
      description:
        select: head > meta[name="description"]
        value: attribute(el, "content")

  news-feed:
    include:
      - '/mack-news/*/**'
    exclude:
      - '/mack-news/fragments/**'
    target: /mack-news/feed.json
    properties:
      template:
        select: head > meta[name="template"]
        value: attribute(el, "content")
      title:
        select: head > meta[property="og:title"]
        value: attribute(el, "content")
      summary:
        select: head > meta[name="summary"]
        value: attribute(el, "content")
      publicationDate:
        select: head > meta[name="date"]
        value: parseTimestamp(attribute(el, "content"), MM/DD/YYYY)
  body-builder-news:
    include:
      - '/parts-and-services/support/body-builders/news-and-events/**'
    exclude:
      - '/parts-and-services/support/body-builders/news-and-events/'
      - '/parts-and-services/support/body-builders/news-and-events/fragments/**'
    target: /body-builder-news.json
    properties:
      template:
        select: head > meta[name="template"]
        value: attribute(el, "content")
      title:
        select: head > meta[property="og:title"]
        value: attribute(el, "content")
      summary:
        select: head > meta[property="og:description"]
        value: attribute(el, "content")
      publicationDate:
        select: none
        value: parseTimestamp(headers["last-modified"], "ddd, DD MMM YYYY hh:mm:ss GMT")
  magazine-articles:
    include:
      - '/magazine/articles/*/**'
    exclude:
      - '/magazine/articles/'
    target: /magazine-articles.json
    properties:
      template:
        select: head > meta[name="template"]
        value: attribute(el, "content")
      title:
        select: head > meta[property="og:title"]
        value: attribute(el, "content")
      subtitle:
        select: h5
        value: textContent(el)
      description:
        select: head > meta[property="og:description"]
        value: attribute(el, "content")
      category:
        select: head > meta[name="category"]
        value: attribute(el, "content")
      truck:
        select: head > meta[name="truck"]
        value: attribute(el, "content")
      author:
        select: head > meta[name="author"]
        value: attribute(el, "content")
      image:
        select: head > meta[property="og:image"]
        value: match(attribute(el, "content"), "https:\/\/[^/]+(/.*)")
      lastModified:
        select: none
        value: parseTimestamp(headers["last-modified"], "ddd, DD MMM YYYY hh:mm:ss GMT")
  search:
    include:
      - '/**'
      - '/mack-news/*/**'
      - '/parts-and-services/support/body-builders/news-and-events/**'
      - '/magazine/articles/*/**'
    exclude:
      - '/drafts/**'
      - 'images/**'
      - '/**/footer'
      - '/footer'
      - '/**/nav'
      - '/nav'
      - '/**/nav-*'
      - '/nav-*'
      - '/**/*-nav'
      - '/*-nav'
      - '/**/sub-nav-*'
      - '/sub-nav-*'
      - '/fragments/**'
      - '/**/sub-nav'
      - '/block-library/**'
      - '/mack-news/fragments/**'
      - '/parts-and-services/support/body-builders/news-and-events/'
      - '/magazine/articles/'
    target: /query-index.json
    properties:
      lastModified:
        select: none
        value: parseTimestamp(headers["last-modified"], "ddd, DD MMM YYYY hh:mm:ss GMT")
      title:
        select: head > meta[property="og:title"]
        value: attribute(el, "content")
      description:
        select: head > meta[name="description"]
        value: attribute(el, "content")
      category:
        select: head > meta[name="category"]
        value: attribute(el, "content")
      tags:
        select: head > meta[property="article:tag"]
        values: attribute(el, "content")
      text:
        select: main
        value: textContent(el)


